/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import model.Types;

/**
 *
 * @author TAI
 */
public final class panelPropertysType extends javax.swing.JPanel {

    /**
     * Creates new form panelPropertysType
     */
    void initGUIPanelPropertysType() {
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
//        txtTypeID.setEnabled(false);

        TableColumnModel columnModel = tblTypes.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(10);
        columnModel.getColumn(1).setPreferredWidth(10);
        columnModel.getColumn(2).setPreferredWidth(50);
        columnModel.getColumn(3).setPreferredWidth(600);
    }

    void initTableTypes() {
        try {
            Vector vCol = new Vector();
            vCol.add("No.");
            vCol.add("TypeID");
            vCol.add("Type name");
            vCol.add("Desciption");
            Vector vData = new Vector();
            List<Types> listTypes = controller.TypesController.getListTypes();
            int countRow = 0;
            for (Types types : listTypes) {
                Vector vTemp = new Vector();
                countRow++;
                vTemp.add(countRow);
                vTemp.add(types.getTypeID());
                vTemp.add(types.getTypeName());
                vTemp.add(types.getDescription());
                vData.add(vTemp);
            }
            DefaultTableModel model = new DefaultTableModel(vData, vCol);
            tblTypes.setModel(model);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(panelPropertysType.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(panelPropertysType.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void findTypes() {
        TableRowSorter rowSorter = new TableRowSorter(tblTypes.getModel());
        tblTypes.setRowSorter(rowSorter);
        txtFind.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
                String text = txtFind.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                String text = txtFind.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent de) {

            }
        });
    }

    public panelPropertysType() {
        initComponents();
        initTableTypes();
        initGUIPanelPropertysType();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTypes = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFind = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtTypeID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTypeName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDesciption = new javax.swing.JTextArea();
        btnRefresh = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        tblTypes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTypes.setRowHeight(25);
        tblTypes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTypesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTypes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1236, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Find:");

        txtFind.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtFind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFindMouseClicked(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon-add.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("TypeID:");

        txtTypeID.setEditable(false);
        txtTypeID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Type name:");

        txtTypeName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Description:");

        txtDesciption.setColumns(20);
        txtDesciption.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtDesciption.setRows(5);
        jScrollPane2.setViewportView(txtDesciption);

        btnRefresh.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_refresh.png"))); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtTypeID, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRefresh)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(0, 69, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(225, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnRefresh))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtTypeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(txtTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(153, Short.MAX_VALUE))
        );

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        initTableTypes();
        initGUIPanelPropertysType();

        txtTypeID.setText("");
        txtTypeName.setText("");
        txtDesciption.setText("");
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void txtFindMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFindMouseClicked
        findTypes();
    }//GEN-LAST:event_txtFindMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            String typeName = txtTypeName.getText();
            String desciption = txtDesciption.getText();

            //type name
            if (typeName.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Type name not be empty !");
                txtTypeName.requestFocus();
                return;
            }
            if (typeName.length() > 30) {
                JOptionPane.showMessageDialog(null, "Type name no more than 30 character !");
                txtTypeName.requestFocus();
                return;
            }
            if (controller.TypesController.checkExistTypeName(typeName)) {
                JOptionPane.showMessageDialog(null, "Type name: " + typeName + " exist !");
                txtTypeName.requestFocus();
                return;
            }
            //desciption
            if (desciption.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Desciption not be empty !");
                txtDesciption.requestFocus();
                return;
            }
            if (desciption.length() > 50) {
                JOptionPane.showMessageDialog(null, "Desciption no more than 50 character !");
                txtDesciption.requestFocus();
                return;
            }

            int index = JOptionPane.showConfirmDialog(null, "Are you want to Add new property type: " + typeName + " ?", "WARNING", JOptionPane.YES_NO_OPTION);
            if (index == JOptionPane.YES_OPTION) {
                controller.TypesController.addNewTypes(typeName, desciption);
                btnRefreshActionPerformed(evt);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(panelPropertysType.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(panelPropertysType.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblTypesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTypesMouseClicked
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        int index = tblTypes.getSelectedRow();

        String typeID = tblTypes.getValueAt(index, 1).toString();
        String typeName = tblTypes.getValueAt(index, 2).toString();
        String description = tblTypes.getValueAt(index, 3).toString();

        txtTypeID.setText(typeID);
        txtTypeName.setText(typeName);
        txtDesciption.setText(description);

    }//GEN-LAST:event_tblTypesMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            int typeID = Integer.parseInt(txtTypeID.getText());
            String typeName = txtTypeName.getText();
            String desciption = txtDesciption.getText();

            //type name
            if (typeName.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Type name not be empty !");
                txtTypeName.requestFocus();
                return;
            }
            if (typeName.length() > 30) {
                JOptionPane.showMessageDialog(null, "Type name no more than 30 character !");
                txtTypeName.requestFocus();
                return;
            }
            if (controller.TypesController.checkExistTypeNameOfTypeOther(typeName, typeID)) {
                JOptionPane.showMessageDialog(null, "Type name: " + typeName + " exist !");
                txtTypeName.requestFocus();
                return;
            }
            //desciption
            if (desciption.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Desciption not be empty !");
                txtDesciption.requestFocus();
                return;
            }
            if (desciption.length() > 50) {
                JOptionPane.showMessageDialog(null, "Desciption no more than 50 character !");
                txtDesciption.requestFocus();
                return;
            }
            Types types = new Types(typeID, typeName, desciption);

            int index = JOptionPane.showConfirmDialog(null, "Are you want to Update property type: " + typeName + " ?", "WARNING", JOptionPane.YES_NO_OPTION);
            if (index == JOptionPane.YES_OPTION) {
                controller.TypesController.updateType(types);
                btnRefreshActionPerformed(evt);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(panelPropertysType.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(panelPropertysType.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            int typeID = Integer.parseInt(txtTypeID.getText());
            String typeName = txtTypeName.getText();
            int index = JOptionPane.showConfirmDialog(null, "Are you want to Delete property type: " + typeName + " ?", "WARNING", JOptionPane.YES_NO_OPTION);
            if (index == JOptionPane.YES_OPTION) {
                controller.TypesController.deleteType(typeID);
                btnRefreshActionPerformed(evt);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(panelPropertysType.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(panelPropertysType.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblTypes;
    private javax.swing.JTextArea txtDesciption;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtTypeID;
    private javax.swing.JTextField txtTypeName;
    // End of variables declaration//GEN-END:variables
}
